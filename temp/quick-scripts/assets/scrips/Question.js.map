{"version":3,"sources":["Question.js"],"names":["cc","Class","extends","Component","properties","paiming","all_match_player","init","myQustion","Array","questions","question_num","self","loader","loadRes","err","object","console","log","length","x","root","id","question","answer","findQuestion","index","Math","floor","random","info"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAQ,IAhBA;AAiBRC,0BAAiB;AAjBT,KAHP;AAsBLC,UAAK,gBAAU;AACX;AACA,aAAKC,SAAL,GAAiB,IAAIC,KAAJ,EAAjB;AACA;AACA,aAAKJ,OAAL,GAAe,CAAf;AACA,aAAKC,gBAAL,GAAwB,CAAxB;;AAEA;AACA,aAAKI,SAAL,GAAiB,EAAjB,CARW,CAQU;AACrB,aAAKC,YAAL,GAAmB,CAAnB;AACA,YAAIC,OAAO,IAAX;;AAEAZ,WAAGa,MAAH,CAAUC,OAAV,CAAkB,WAAlB,EAA+B,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAClD,gBAAID,GAAJ,EAAS;AACLE,wBAAQC,GAAR,CAAYH,GAAZ;AACA;AACH;;AAEDH,iBAAKD,YAAL,GAAoBK,OAAOG,MAA3B;AACA;AACA,iBAAK,IAAIC,IAAE,CAAX,EAAcA,IAAIJ,OAAOG,MAAzB,EAAiCC,GAAjC,EAAsC;AAClC,oBAAIC,OAAOL,OAAOI,CAAP,CAAX,CADkC,CACZ;AACtBR,qBAAKF,SAAL,CAAeU,CAAf,IAAoB,EAApB;AACCR,qBAAKF,SAAL,CAAeU,CAAf,EAAkBE,EAAlB,GAAuBD,KAAKC,EAA5B,CAHiC,CAGD;AAChCV,qBAAKF,SAAL,CAAeU,CAAf,EAAkBG,QAAlB,GAA6BF,KAAKE,QAAlC,CAJiC,CAIW;AAC5CX,qBAAKF,SAAL,CAAeU,CAAf,EAAkBI,MAAlB,GAA2BH,KAAKG,MAAhC,CALiC,CAKO;AAE5C;AACJ,SAhBD;AAkBH,KApDI;AAqDL;AACAC,kBAAa,wBAAU;AACnB;AACA;AACA;AACA,YAAIC,QAAQC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAe,KAAKlB,YAA/B,CAAZ;AACAX,WAAGkB,GAAH,CAAO,UAAQQ,KAAR,GAAc,IAArB;AACA,YAAII,OAAO,EAAX;AACAA,aAAKP,QAAL,GAAgB,KAAKb,SAAL,CAAegB,KAAf,EAAsBH,QAAtC;AACAvB,WAAGkB,GAAH,CAAO,OAAKY,KAAKP,QAAjB;AACAO,aAAKN,MAAL,GAAc,KAAKd,SAAL,CAAegB,KAAf,EAAsBF,MAApC;AACAxB,WAAGkB,GAAH,CAAO,OAAKY,KAAKN,MAAjB;;AAEA,aAAKhB,SAAL,CAAe,KAAKA,SAAL,CAAeW,MAA9B,IAAsC,EAAtC;AACA,aAAKX,SAAL,CAAe,KAAKA,SAAL,CAAeW,MAAf,GAAsB,CAArC,EAAwCI,QAAxC,GAAmDO,KAAKP,QAAxD;AACA,aAAKf,SAAL,CAAe,KAAKA,SAAL,CAAeW,MAAf,GAAsB,CAArC,EAAwCK,MAAxC,GAAiDM,KAAKN,MAAtD;;AAEA,eAAOM,IAAP;AACH;AACD;AAxEK,CAAT","file":"Question.js","sourceRoot":"../../../../assets/scrips","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        paiming:null,\n        all_match_player:null\n    },\n    init:function(){\n        //用户答的题目集合，最后一道应该是他错的 或者 他得了第一名\n        this.myQustion = new Array()\n        // this.rightNum = 0\n        this.paiming = 0\n        this.all_match_player = 0\n\n        //题库集合\n        this.questions = {}; // 存储解析出来的JSON数据\n        this.question_num =0;\n        var self = this;\n\n        cc.loader.loadRes('tiku.json', function (err, object) {\n            if (err) {\n                console.log(err);\n                return;\n            }\n\n            self.question_num = object.length;\n            // 将循环2次，因为bodies是个拥有2个对象的数组\n            for (let x=0; x < object.length; x++) {\n                let root = object[x]; // root是个对象\n                self.questions[x] = [];\n                 self.questions[x].id = root.id; // 第1次循环root_name = root\n                 self.questions[x].question = root.question; // type = static\n                 self.questions[x].answer = root.answer; // gravity = 0.2\n\n            }\n        });\n        \n    },\n    //出题\n    findQuestion:function(){\n        // var info = []\n        // info.question = \"王天也姓王\";\n        // info.answer = \"对\";\n        var index = Math.floor(Math.random()*(this.question_num));\n        cc.log(\"随机到了第\"+index+\"道题\");\n        var info = [];\n        info.question = this.questions[index].question;\n        cc.log(\"题目\"+info.question);\n        info.answer = this.questions[index].answer;\n        cc.log(\"答案\"+info.answer);\n\n        this.myQustion[this.myQustion.length]=[]\n        this.myQustion[this.myQustion.length-1].question = info.question\n        this.myQustion[this.myQustion.length-1].answer = info.answer\n        \n        return info\n    },\n    // update (dt) {},\n});\n"]}